---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: lidarr
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      lidarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: &secret lidarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 2.14.3.4791@sha256:46d1b3ac8687c8d5a621b3f5a2d83f08952afa00474113434c6ad3e320ea9e5a
            env:
              TZ: ${TIMEZONE}
              LIDARR__AUTHENTICATION_METHOD: External
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__SERVER__PORT: &port 80
              LIDARR__LOG__DBENABLED: "False"
              LIDARR__LOG__LEVEL: info
              LIDARR__APP__THEME: dark
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 50m
                memory: 512M
              limits:
                memory: 2048M
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 1001
    route:
      main:
        hostnames: ["lidarr.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: lidarr
                port: *port
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
      media:
        existingClaim: music
        globalMounts:
          - path: /music
      movies:
        existingClaim: videos
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
    service:
      app:
        controller: lidarr
        ports:
          http:
            port: *port
